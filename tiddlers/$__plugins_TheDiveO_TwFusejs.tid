author: TheDiveO
core-version: >=5.1.12
created: 20180809162746002
description: Fuse.js plugin for TiddlyWiki5
list: readme license history
modified: 20190509092843677
plugin-type: plugin
source: https://github.com/TheDiveO/TwFusejs
tags: 
title: $:/plugins/TheDiveO/TwFusejs
type: application/json
version: 0.9.1

{"tiddlers":{"$:/plugins/TheDiveO/TwFusejs/libs/fuse.js":{"text":"/* automatically included from npm package `fuse.js` */\r\n/*!\n * Fuse.js v3.2.1 - Lightweight fuzzy-search (http://fusejs.io)\n * \n * Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n */\n!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"Fuse\",[],t):\"object\"==typeof exports?exports.Fuse=t():e.Fuse=t()}(this,function(){return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var r={};return t.m=e,t.c=r,t.i=function(e){return e},t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=8)}([function(e,t,r){\"use strict\";e.exports=function(e){return Array.isArray?Array.isArray(e):\"[object Array]\"===Object.prototype.toString.call(e)}},function(e,t,r){\"use strict\";function n(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var o=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=r(5),a=r(7),s=r(4),c=function(){function e(t,r){var o=r.location,i=void 0===o?0:o,a=r.distance,c=void 0===a?100:a,h=r.threshold,l=void 0===h?.6:h,u=r.maxPatternLength,f=void 0===u?32:u,d=r.isCaseSensitive,v=void 0!==d&&d,p=r.tokenSeparator,g=void 0===p?/ +/g:p,y=r.findAllMatches,m=void 0!==y&&y,k=r.minMatchCharLength,x=void 0===k?1:k;n(this,e),this.options={location:i,distance:c,threshold:l,maxPatternLength:f,isCaseSensitive:v,tokenSeparator:g,findAllMatches:m,minMatchCharLength:x},this.pattern=this.options.isCaseSensitive?t:t.toLowerCase(),this.pattern.length<=f&&(this.patternAlphabet=s(this.pattern))}return o(e,[{key:\"search\",value:function(e){if(this.options.isCaseSensitive||(e=e.toLowerCase()),this.pattern===e)return{isMatch:!0,score:0,matchedIndices:[[0,e.length-1]]};var t=this.options,r=t.maxPatternLength,n=t.tokenSeparator;if(this.pattern.length>r)return i(e,this.pattern,n);var o=this.options,s=o.location,c=o.distance,h=o.threshold,l=o.findAllMatches,u=o.minMatchCharLength;return a(e,this.pattern,this.patternAlphabet,{location:s,distance:c,threshold:h,findAllMatches:l,minMatchCharLength:u})}}]),e}();e.exports=c},function(e,t,r){\"use strict\";var n=r(0),o=function e(t,r,o){if(r){var i=r.indexOf(\".\"),a=r,s=null;-1!==i&&(a=r.slice(0,i),s=r.slice(i+1));var c=t[a];if(null!==c&&void 0!==c)if(s||\"string\"!=typeof c&&\"number\"!=typeof c)if(n(c))for(var h=0,l=c.length;h<l;h+=1)e(c[h],s,o);else s&&e(c,s,o);else o.push(c.toString())}else o.push(t);return o};e.exports=function(e,t){return o(e,t,[])}},function(e,t,r){\"use strict\";e.exports=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=[],n=-1,o=-1,i=0,a=e.length;i<a;i+=1){var s=e[i];s&&-1===n?n=i:s||-1===n||(o=i-1,o-n+1>=t&&r.push([n,o]),n=-1)}return e[i-1]&&i-n>=t&&r.push([n,i-1]),r}},function(e,t,r){\"use strict\";e.exports=function(e){for(var t={},r=e.length,n=0;n<r;n+=1)t[e.charAt(n)]=0;for(var o=0;o<r;o+=1)t[e.charAt(o)]|=1<<r-o-1;return t}},function(e,t,r){\"use strict\";e.exports=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:/ +/g,n=new RegExp(t.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\"\\\\$&\").replace(r,\"|\")),o=e.match(n),i=!!o,a=[];if(i)for(var s=0,c=o.length;s<c;s+=1){var h=o[s];a.push([e.indexOf(h),h.length-1])}return{score:i?.5:1,isMatch:i,matchedIndices:a}}},function(e,t,r){\"use strict\";e.exports=function(e,t){var r=t.errors,n=void 0===r?0:r,o=t.currentLocation,i=void 0===o?0:o,a=t.expectedLocation,s=void 0===a?0:a,c=t.distance,h=void 0===c?100:c,l=n/e.length,u=Math.abs(s-i);return h?l+u/h:u?1:l}},function(e,t,r){\"use strict\";var n=r(6),o=r(3);e.exports=function(e,t,r,i){for(var a=i.location,s=void 0===a?0:a,c=i.distance,h=void 0===c?100:c,l=i.threshold,u=void 0===l?.6:l,f=i.findAllMatches,d=void 0!==f&&f,v=i.minMatchCharLength,p=void 0===v?1:v,g=s,y=e.length,m=u,k=e.indexOf(t,g),x=t.length,S=[],M=0;M<y;M+=1)S[M]=0;if(-1!==k){var b=n(t,{errors:0,currentLocation:k,expectedLocation:g,distance:h});if(m=Math.min(b,m),-1!==(k=e.lastIndexOf(t,g+x))){var _=n(t,{errors:0,currentLocation:k,expectedLocation:g,distance:h});m=Math.min(_,m)}}k=-1;for(var L=[],w=1,A=x+y,C=1<<x-1,I=0;I<x;I+=1){for(var O=0,F=A;O<F;){n(t,{errors:I,currentLocation:g+F,expectedLocation:g,distance:h})<=m?O=F:A=F,F=Math.floor((A-O)/2+O)}A=F;var P=Math.max(1,g-F+1),j=d?y:Math.min(g+F,y)+x,z=Array(j+2);z[j+1]=(1<<I)-1;for(var T=j;T>=P;T-=1){var E=T-1,K=r[e.charAt(E)];if(K&&(S[E]=1),z[T]=(z[T+1]<<1|1)&K,0!==I&&(z[T]|=(L[T+1]|L[T])<<1|1|L[T+1]),z[T]&C&&(w=n(t,{errors:I,currentLocation:E,expectedLocation:g,distance:h}))<=m){if(m=w,(k=E)<=g)break;P=Math.max(1,2*g-k)}}if(n(t,{errors:I+1,currentLocation:g,expectedLocation:g,distance:h})>m)break;L=z}return{isMatch:k>=0,score:0===w?.001:w,matchedIndices:o(S,p)}}},function(e,t,r){\"use strict\";function n(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var o=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=r(1),a=r(2),s=r(0),c=function(){function e(t,r){var o=r.location,i=void 0===o?0:o,s=r.distance,c=void 0===s?100:s,h=r.threshold,l=void 0===h?.6:h,u=r.maxPatternLength,f=void 0===u?32:u,d=r.caseSensitive,v=void 0!==d&&d,p=r.tokenSeparator,g=void 0===p?/ +/g:p,y=r.findAllMatches,m=void 0!==y&&y,k=r.minMatchCharLength,x=void 0===k?1:k,S=r.id,M=void 0===S?null:S,b=r.keys,_=void 0===b?[]:b,L=r.shouldSort,w=void 0===L||L,A=r.getFn,C=void 0===A?a:A,I=r.sortFn,O=void 0===I?function(e,t){return e.score-t.score}:I,F=r.tokenize,P=void 0!==F&&F,j=r.matchAllTokens,z=void 0!==j&&j,T=r.includeMatches,E=void 0!==T&&T,K=r.includeScore,$=void 0!==K&&K,J=r.verbose,N=void 0!==J&&J;n(this,e),this.options={location:i,distance:c,threshold:l,maxPatternLength:f,isCaseSensitive:v,tokenSeparator:g,findAllMatches:m,minMatchCharLength:x,id:M,keys:_,includeMatches:E,includeScore:$,shouldSort:w,getFn:C,sortFn:O,verbose:N,tokenize:P,matchAllTokens:z},this.setCollection(t)}return o(e,[{key:\"setCollection\",value:function(e){return this.list=e,e}},{key:\"search\",value:function(e){this._log('---------\\nSearch pattern: \"'+e+'\"');var t=this._prepareSearchers(e),r=t.tokenSearchers,n=t.fullSearcher,o=this._search(r,n),i=o.weights,a=o.results;return this._computeScore(i,a),this.options.shouldSort&&this._sort(a),this._format(a)}},{key:\"_prepareSearchers\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=[];if(this.options.tokenize)for(var r=e.split(this.options.tokenSeparator),n=0,o=r.length;n<o;n+=1)t.push(new i(r[n],this.options));return{tokenSearchers:t,fullSearcher:new i(e,this.options)}}},{key:\"_search\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments[1],r=this.list,n={},o=[];if(\"string\"==typeof r[0]){for(var i=0,a=r.length;i<a;i+=1)this._analyze({key:\"\",value:r[i],record:i,index:i},{resultMap:n,results:o,tokenSearchers:e,fullSearcher:t});return{weights:null,results:o}}for(var s={},c=0,h=r.length;c<h;c+=1)for(var l=r[c],u=0,f=this.options.keys.length;u<f;u+=1){var d=this.options.keys[u];if(\"string\"!=typeof d){if(s[d.name]={weight:1-d.weight||1},d.weight<=0||d.weight>1)throw new Error(\"Key weight has to be > 0 and <= 1\");d=d.name}else s[d]={weight:1};this._analyze({key:d,value:this.options.getFn(l,d),record:l,index:c},{resultMap:n,results:o,tokenSearchers:e,fullSearcher:t})}return{weights:s,results:o}}},{key:\"_analyze\",value:function(e,t){var r=e.key,n=e.arrayIndex,o=void 0===n?-1:n,i=e.value,a=e.record,c=e.index,h=t.tokenSearchers,l=void 0===h?[]:h,u=t.fullSearcher,f=void 0===u?[]:u,d=t.resultMap,v=void 0===d?{}:d,p=t.results,g=void 0===p?[]:p;if(void 0!==i&&null!==i){var y=!1,m=-1,k=0;if(\"string\"==typeof i){this._log(\"\\nKey: \"+(\"\"===r?\"-\":r));var x=f.search(i);if(this._log('Full text: \"'+i+'\", score: '+x.score),this.options.tokenize){for(var S=i.split(this.options.tokenSeparator),M=[],b=0;b<l.length;b+=1){var _=l[b];this._log('\\nPattern: \"'+_.pattern+'\"');for(var L=!1,w=0;w<S.length;w+=1){var A=S[w],C=_.search(A),I={};C.isMatch?(I[A]=C.score,y=!0,L=!0,M.push(C.score)):(I[A]=1,this.options.matchAllTokens||M.push(1)),this._log('Token: \"'+A+'\", score: '+I[A])}L&&(k+=1)}m=M[0];for(var O=M.length,F=1;F<O;F+=1)m+=M[F];m/=O,this._log(\"Token score average:\",m)}var P=x.score;m>-1&&(P=(P+m)/2),this._log(\"Score average:\",P);var j=!this.options.tokenize||!this.options.matchAllTokens||k>=l.length;if(this._log(\"\\nCheck Matches: \"+j),(y||x.isMatch)&&j){var z=v[c];z?z.output.push({key:r,arrayIndex:o,value:i,score:P,matchedIndices:x.matchedIndices}):(v[c]={item:a,output:[{key:r,arrayIndex:o,value:i,score:P,matchedIndices:x.matchedIndices}]},g.push(v[c]))}}else if(s(i))for(var T=0,E=i.length;T<E;T+=1)this._analyze({key:r,arrayIndex:T,value:i[T],record:a,index:c},{resultMap:v,results:g,tokenSearchers:l,fullSearcher:f})}}},{key:\"_computeScore\",value:function(e,t){this._log(\"\\n\\nComputing score:\\n\");for(var r=0,n=t.length;r<n;r+=1){for(var o=t[r].output,i=o.length,a=1,s=1,c=0;c<i;c+=1){var h=e?e[o[c].key].weight:1,l=1===h?o[c].score:o[c].score||.001,u=l*h;1!==h?s=Math.min(s,u):(o[c].nScore=u,a*=u)}t[r].score=1===s?a:s,this._log(t[r])}}},{key:\"_sort\",value:function(e){this._log(\"\\n\\nSorting....\"),e.sort(this.options.sortFn)}},{key:\"_format\",value:function(e){var t=[];this.options.verbose&&this._log(\"\\n\\nOutput:\\n\\n\",JSON.stringify(e));var r=[];this.options.includeMatches&&r.push(function(e,t){var r=e.output;t.matches=[];for(var n=0,o=r.length;n<o;n+=1){var i=r[n];if(0!==i.matchedIndices.length){var a={indices:i.matchedIndices,value:i.value};i.key&&(a.key=i.key),i.hasOwnProperty(\"arrayIndex\")&&i.arrayIndex>-1&&(a.arrayIndex=i.arrayIndex),t.matches.push(a)}}}),this.options.includeScore&&r.push(function(e,t){t.score=e.score});for(var n=0,o=e.length;n<o;n+=1){var i=e[n];if(this.options.id&&(i.item=this.options.getFn(i.item,this.options.id)[0]),r.length){for(var a={item:i.item},s=0,c=r.length;s<c;s+=1)r[s](i,a);t.push(a)}else t.push(i.item)}return t}},{key:\"_log\",value:function(){if(this.options.verbose){var e;(e=console).log.apply(e,arguments)}}}]),e}();e.exports=c}])});","title":"$:/plugins/TheDiveO/TwFusejs/libs/fuse.js","type":"application/javascript","module-type":"library","created":"20180802114846490","creator":"TheDiveO","modified":"20180802114846490"},"$:/plugins/TheDiveO/TwFusejs/filters/fuse.js":{"title":"$:/plugins/TheDiveO/TwFusejs/filters/fuse.js","text":"/*\\\ncreated: 20180809165919537\ntitle: $:/plugins/TheDiveO/TwFusejs/filters/fuse.js\ntype: application/javascript\nmodified: 20180809170012994\ntags:\nmodule-type: filteroperator\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n// Plugin-relative path to default Fuse.js options JSON data tiddler.\nvar FUSE_OPTS_DEFAULT = \"/options/default\";\n\n// Locate the plugin title, so we can later easily access our plugin tiddlers\n// without having to repeat the plugin title root/stem over and over again.\n// Thanks to the CommonJS definitions, we have access to this tiddlers title\n// as the module id(entifier).\nvar PLUGIN = module.id.split(\"/\").slice(0, 4).join(\"/\");\n\nvar Fuse = require(\"../libs/fuse.js\");\n\n/* The \"fuse\" filter operator, powered by Fuse.js.\n *\n * Usage examples:\n *\n * [fuse[foobar]] searches all tiddlers (including shadows, et cetera!) for\n *    \"foobar\" or something similar, returning a list of matching tiddler\n *    titles.\n * [!is[current]!is[system]fuse[foobar]] searches only normal tiddlers.\n * [fuse:myfuseopts[foobar]] uses the fuse search options stored in the\n *   JSON data tiddler \"myfuseopts\" and searches for \"foobar\" or similar.\n *\n * The parameters to this operator function are as follows:\n *\n * source: a tiddler iterator that represents the results of the previous\n *    filter step. This is the set of tiddlers our fuse search operator will\n *    have to search through.\n * operator: the arguments to the fuse filter operator...\n *    .operator: name of the filter operator: always \"fuse\", so AWFUL.\n *    .operand: the operand as a string: what to search for; text references\n *       and variable names have already been resolved at this point into the\n *       string to be searched for.\n *    .prefix: an optional \"!\" if the filter is to be negated; when the prefix\n *       is empty, then options.matchAllTokens=True is assumed; if the prefix\n *       is \"!\", then options.matchAllTokens=False.\n *    .suffix: an optional string containing an additional filter argument:\n *       the name of a (TiddlyWiki) variable either directly specifying the\n *       Fuse.js options in form of a JSON string, or instead referencing a\n *       JSON data tiddler by title which then contains the Fuse.js options.\n *       If left empty/unspecified, then the default TwFusejs plugin options\n *       will be taken instead, stored in ./options/default inside this plugin.\n * options:\n *    .wiki: wiki object reference.\n *    .widget: an optional widget node object reference.\n *\n * It's allowed to return either an array of titles or a tiddler iterator,\n * depending on your needs: however, for the fuse operator, we always return\n * an array of title (strings).\n */\nexports.fuse = function(source, operator, options) {\n\t//console.log(\"searching for:\", \"'\"+operator.operand+\"'\");\n\n\t// As we want Fuse.js to search an array of tiddlers and not just\n\t// tiddler titles, we ensure to have all input tiddler objects ready\n\t// for Fuse.js to work on.\n\tvar tiddlers = [];\n\tsource(function(tiddler, title) {\n    tiddlers.push(tiddler);\n\t});\n\n\t// Prepare the Fuse.js search options: there are basically three different\n\t// sources:\n\t// 1. no suffix given: take the default options.\n\t// 2. suffix given, contains JSON data resulting in an option object.\n\t// 3. suffix given, not JSON, but instead references a JSON data tiddler.\n\tvar fuse_options;\n\tif (!operator.suffix) {\n\t\t// case 1: use the default, Luke!\n\t\t// console.log(\"using default TwFusejs options\");\n\t\tvar optionsTitle = PLUGIN + FUSE_OPTS_DEFAULT;\n\t\ttry {\n\t\t\tfuse_options = JSON.parse(options.wiki.getTiddler(optionsTitle).fields.text);\n\t\t} catch (e) {\n\t\t\t// Return an error message instead of a list of matching tiddlers\n\t\t\t// in case we cannot properly parse the options JSON data tiddler.\n\t\t\tvar msg = \"invalid fuse options JSON tiddler: \\\"\" + optionsTitle + \"\\\"\";\n\t\t\tconsole.log(msg);\n\t\t\treturn [msg];\n\t\t}\n\t} else if (options.widget) {\n\t\t// try case 2: variable contents are JSON.\n\t\t// console.log(\"using variable:\", operator.suffix);\n\t\ttry {\n\t\t\tfuse_options = JSON.parse(options.widget.getVariable(operator.suffix));\n\t\t\t// console.log(\"variable JSON contents:\", options.widget.getVariable(operator.suffix));\n\t\t} catch (e) {\n\t\t\tfuse_options = null;\n\t\t}\n\t\tif (!fuse_options || typeof fuse_options === \"string\") {\n\t\t\t// Erm, case 2 failed, so this should better be case 3: a title of a\n\t\t\t// JSON data tiddler.\n\t\t\tvar optionsTitle = fuse_options ?\n\t\t\t\t\t\tfuse_options : options.widget.getVariable(operator.suffix);\n\t\t\t// console.log(\"using JSON tiddler:\", optionsTitle);\n\t\t\ttry {\n\t\t\t\tfuse_options = JSON.parse(\n\t\t\t\t\toptions.wiki.getTiddler(optionsTitle).fields.text);\n\t\t\t} catch (e) {\n\t\t\t\t\tvar msg = \"malformed JSON data in tiddler \\\"\" + optionsTitle + \"\\\"\";\n\t\t\t\t\tconsole.log(msg);\n\t\t\t\t\treturn [msg];\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// erm: suffix = variable name given, but there is no widget context and\n\t\t// thus no variables...\n\t\tvar msg = \"missing widget context to look up search options variable\";\n\t\tconsole.log(msg);\n\t\treturn [msg];\n\t}\n\n\t// Handle optional \"!\" prefix: when no prefix is given, or the prefix\n\t// is something other than \"!\", then we AND all search tokens; otherwise,\n\t// we OR them.\n\tfuse_options.matchAllTokens = operator.prefix !== \"!\";\n\t// console.log(\"Find all matches:\", fuse_options.matchAllTokens);\n\n\t// Handle options element \"getFn\" especially: Fuse.js expect it to\n\t// contain a function object. If it contains a string instead, then\n\t// we interpret it to be a module export, so we try to locate the\n\t// exported function.\n\tif (fuse_options.getFn && typeof fuse_options.getFn === \"string\") {\n\t\ttry {\n\t\t\t// First try to resolve the given module tiddler title; if that fails,\n\t\t\t// then try again with \".js\" appended to the title.\n\t\t\tvar module;\n\t\t\ttry {\n\t\t\t\tmodule = require(fuse_options.getFn);\n\t\t\t} catch (e) {\n\t\t\t\tif ($tw.utils.strEndsWith(fuse_options.getFn, \".js\")) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t\tmodule = require(fuse_options.getFn + \".js\");\n\t\t\t}\n\t\t\tfuse_options.getFn = module.getFn;\n\t\t} catch (e) {\n\t\t\tconsole.warn(\"cannot resolve getFn:\", fuse_options.getFn);\n\t\t\tdelete fuse_options.getFn;\n\t\t}\n\t} else {\n\t\tdelete fuse_options.getFn;\n\t}\n\n\t// Make sure that there is an \"id\" option present; default to a\n\t// tiddler's title.\n\tfuse_options.id = fuse_options.id || \"fields.title\";\n\n\t// Ready to search!\n\tvar search_terms = operator.operand.trim();\n\t// console.log(\"Fuse.js search for:\", \"'\"+search+\"'\");\n\t// console.log(\"Fuse.js options:\", fuse_options);\n\tvar fuse = new Fuse(tiddlers, fuse_options);\n\tvar hits = search_terms ? fuse.search(search_terms) : [];\n\n\t// In case the fuse options cause hit objects instead of simple hit\n\t// strings to be returned, then only return the (hit) item; this should\n\t// be a tiddler title, if the \"id\" option was set to \"fields.title\".\n\tvar result = [];\n\t$tw.utils.each(hits, function(hit) {\n\t\tif (typeof(hit) === \"string\")  {\n\t\t\tresult.push(hit);\n\t\t} else {\n\t\t\tresult.push(hit.item);\n\t\t}\n\t})\n\treturn result;\n};\n\n})();\n","created":"20180809165919537","type":"application/javascript","modified":"20180809170012994","tags":"","module-type":"filteroperator"},"$:/plugins/TheDiveO/TwFusejs/filters/rendertext.js":{"title":"$:/plugins/TheDiveO/TwFusejs/filters/rendertext.js","text":"/*\\\ncreated: 20180811135806330\ntitle: $:/plugins/TheDiveO/TwFusejs/filters/rendertext.js\ntype: application/javascript\nmodified: 20180811140005330\ntags:\nmodule-type: filteroperator\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/* Given a set of titles, renders each title's text content (or another tiddler\n * field) into text.\n *\n * Usage examples:\n *\n * [rendertext[]] renders each title's text field into plain text.\n *\n * [rendertext:F[]] renders each title's field \"F\" into plain text.\n *\n * The parameters to the operator function are as follows:\n *\n * source: a tiddler iterator that represents the results of the previous\n *    filter step.\n * operator: the arguments to this filter operator...\n *    .operator: name of the filter operator.\n *    .operand: the operand as a string; text references and variable names\n *       have already been resolved at this point. This filter ignores the\n *       operand.\n *    .prefix: an optional \"!\" if the filter is to be negated; this gets\n *       ignored by this filter, though.\n *    .suffix: an optional string containing an additional filter argument:\n *       the name of the tiddler field to render as text.\n * options:\n *    .wiki: wiki object reference.\n *    .widget: an optional widget node object reference.\n *\n * It's allowed to return either an array of titles or a tiddler iterator,\n * depending on your needs.\n */\nexports.rendertext = function(source, operator, options) {\n\tvar field = operator.suffix || \"text\";\n\tvar results = [];\n\tsource(function(tiddler, title) {\n\t\tconsole.log(\"render tiddler:\", tiddler);\n\t\tvar text = options.wiki.renderText(\n\t\t\t\"text/plain\",\n\t\t\ttiddler.fields.type || \"text/vnd.tiddlywiki\",\n\t\t  tiddler.fields[field],\n\t\t\t{\n\t\t\t\tparseAsInline: false,\n\t\t\t\tparentWidget: options.widget\n\t\t\t});\n\t\tresults.push(text);\n\t});\n\treturn results;\n};\n\n})();\n","created":"20180811135806330","type":"application/javascript","modified":"20180811140005330","tags":"","module-type":"filteroperator"},"$:/plugins/TheDiveO/TwFusejs/filters/stringlimit.js":{"title":"$:/plugins/TheDiveO/TwFusejs/filters/stringlimit.js","text":"/*\\\ncreated: 20180811135806330\ntitle: $:/plugins/TheDiveO/TwFusejs/filters/stringlimit.js\ntype: application/javascript\nmodified: 20180811140005330\ntags:\nmodule-type: filteroperator\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/* Given a set of titles, this filter limits each title to a certain maximum length..\n *\n * Usage examples:\n *\n * [stringlimit[]] limits title to the default length of 100 characters; defaults to\n *   adding a trailing ellipsis \"...\" when truncating a title.\n * [stringlimit[20]] truncates titles to max 20 characters.\n * [stringlimit:***[]] sets the ellipsis to \"***\" when truncating titles.\n *\n * The parameters to the operator function are as follows:\n *\n * source: a tiddler iterator that represents the results of the previous\n *    filter step.\n * operator: the arguments to this filter operator...\n *    .operator: name of the filter operator.\n *    .operand: the operand as a string; text references and variable names\n *       have already been resolved at this point.\n *    .prefix: an optional \"!\" if the filter is to be negated.\n *    .suffix: an optional string containing an additional filter argument.\n * options:\n *    .wiki: wiki object reference.\n *    .widget: an optional widget node object reference.\n *\n * It's allowed to return either an array of titles or a tiddler iterator,\n * depending on your needs.\n */\nexports.stringlimit = function(source, operator, options) {\n\tvar ellipsis = operator.suffix || \"...\";\n\tvar maxTitleLen = parseInt(operator.operand) || 100;\n\tvar results = [];\n\tsource(function(tiddler, title) {\n\t\tif (title.length > maxTitleLen) {\n\t\t\ttitle = title.substr(0, maxTitleLen) + ellipsis;\n\t\t}\n\t\tresults.push(title);\n\t});\n\treturn results;\n};\n\n})();\n","created":"20180811135806330","type":"application/javascript","modified":"20180811140005330","tags":"","module-type":"filteroperator"},"$:/plugins/TheDiveO/TwFusejs/getfns/multipath.js":{"title":"$:/plugins/TheDiveO/TwFusejs/getfns/multipath.js","text":"/*\\\ncreated: 20180815181502529\ntitle: $:/plugins/TheDiveO/TwFusejs/getfns/multipath.js\ntype: application/javascript\nmodified: 20180815181519493\ntags:\nmodule-type: library\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar deep = require(\"../libs/deep.js\").deep;\n\n/* Export a Fuse.js getFn function that interprets the key/path not as a single\n * attribute name, but instead as a list of names/keys/paths, separated by \",\".\n * The resulting values are then banged together into one single string, with\n * the values separated by plain spaces \" \".\n */\nexports.getFn = function (item, key) {\n  var keys = key.split(\",\");\n  var results = [];\n  $tw.utils.each(keys, function(key) {\n    results.push(deep(item, key.trim(), []));\n  });\n  // Fuse.js expects getFn()s to return lists, erm, arrays, instead of\n  // scalars.\n  return [results.join(\" \")];\n};\n\n})();\n","created":"20180815181502529","type":"application/javascript","modified":"20180815181519493","tags":"","module-type":"library"},"$:/plugins/TheDiveO/TwFusejs/getfns/wildcard.js":{"title":"$:/plugins/TheDiveO/TwFusejs/getfns/wildcard.js","text":"/*\\\ncreated: 20180813165310714\ntitle: $:/plugins/TheDiveO/TwFusejs/getfns/wildcard.js\ntype: application/javascript\nmodified: 20180813165403648\ntags:\nmodule-type: library\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar deepValues = function(object, path, result) {\n  if (!path) {\n    // Reached the leaf, at least according to the path specified.\n    result.push(object);\n  } else {\n    var field;\n    var path;\n    var dot = path.indexOf(\".\");\n    if (dot >= 0) {\n      field = path.slice(0, dot);\n      path = path.slice(dot + 1);\n    } else {\n      field = path;\n      path = null;\n    }\n    if (field === \"*\" && !path) {\n      // Wildcard on a path leaf!\n      $tw.utils.each(object, function(value, field) {\n        console.log(\"wildcarded field:\", field);\n    \t\tresult.push(value.toString());\n    \t});\n    } else {\n      var value = object[field];\n      if (value !== undefined && value !== null) {\n        if (!path && (typeof value === \"string\" || typeof value === \"number\")) {\n          // We've reached the leaf, and it is a scalar value (so no objects)...\n          result.push(value.toString());\n        } else if ($tw.utils.isArray(value)) {\n          // We've got an array, so we continue to resolve, but this time the\n          // path remaining on all array elements...\n          for (var idx = 0, len = value.length; idx < len; idx += 1) {\n            deepValues(value[idx], path, result);\n          }\n        } else if (path) {\n          // This is an object, so try to resolve further if there is a path\n          // still left...\n          deepValues(value, path, result);\n        }\n      }\n    }\n  }\n  return result;\n};\n\n/* Export a Fuse.js getFn function that allows to use the \"*\" wildcard referring\n * to all object attributes (on this level). Otherwise, it works like the\n * Fuse.js-builtin deepValue getFn.\n */\nexports.getFn = function (item, key) {\n  var result = deepValues(item, key, []);\n\treturn result;\n};\n\n})();\n","created":"20180813165310714","type":"application/javascript","modified":"20180813165403648","tags":"","module-type":"library"},"$:/plugins/TheDiveO/TwFusejs/history":{"title":"$:/plugins/TheDiveO/TwFusejs/history","created":"20180809162835518","modified":"20180818165138360","tags":"","type":"text/vnd.tiddlywiki","text":"* ''0.9.1''\n** require better fuzzy matching by lowering(!) the threshold option.\n** internal code cleanup.\n\n* ''0.9.0'' -- first beta release for more general testing."},"$:/plugins/TheDiveO/TwFusejs/icon":{"title":"$:/plugins/TheDiveO/TwFusejs/icon","comment":"\"artwork\" by TheDiveO","created":"20180810165337479","modified":"20180816174307842","tags":"","type":"text/vnd.tiddlywiki","text":"<svg width=\"22pt\" height=\"22pt\" viewBox=\"0 0 128 128\">\n    <g fill-rule=\"evenodd\">\n    <path\n       style=\"display:inline;overflow:visible;visibility:visible;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.85333335;marker:none;enable-background:accumulate\"\n       d=\"M 14.599609 0.23242188 L 2.0996094 7.4667969 L 2.0996094 21.900391 L 14.599609 29.132812 L 27.132812 21.900391 L 27.132812 7.4667969 L 14.599609 0.23242188 z M 11.248047 6.1601562 C 14.454461 6.1601563 17.080078 8.7877256 17.080078 11.994141 C 17.080078 13.245949 16.676851 14.406277 15.998047 15.359375 C 16.186364 15.235686 16.435703 15.24625 16.601562 15.412109 L 22.568359 21.378906 C 22.758375 21.568922 22.758375 21.874437 22.568359 22.064453 L 21.494141 23.138672 C 21.304125 23.328688 20.99861 23.328688 20.808594 23.138672 L 14.841797 17.171875 C 14.700841 17.030919 14.664252 16.826242 14.732422 16.652344 C 13.757464 17.384677 12.553369 17.826172 11.248047 17.826172 C 8.041632 17.826172 5.4160154 15.200555 5.4160156 11.994141 C 5.4160156 8.7877256 8.0416322 6.1601562 11.248047 6.1601562 z M 11.248047 8.6601562 C 9.3927324 8.6601562 7.9160156 10.138826 7.9160156 11.994141 C 7.9160156 13.849455 9.3927324 15.326172 11.248047 15.326172 C 13.103361 15.326172 14.580078 13.849455 14.580078 11.994141 C 14.580078 10.138826 13.103361 8.6601562 11.248047 8.6601562 z \"\n       transform=\"scale(4.3636363)\"\n       id=\"path887\" />\n    </g>\n</svg>"},"$:/plugins/TheDiveO/TwFusejs/libs/deep.js":{"title":"$:/plugins/TheDiveO/TwFusejs/libs/deep.js","text":"/*\\\ncreated: 20180815161626210\ntitle: $:/plugins/TheDiveO/TwFusejs/libs/deep.js\ntype: application/javascript\nmodified: 20180815161710665\ntags:\nmodule-type: library\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/* Utility to fetch the value of a named (multi-level) object element/attribute.\n *\n * The parameters are as follows:\n *\n * object: the object from which the values should be taken.\n * path: the element/attribute path, in the form of \"a1\", \"a1.a2\", et cetera.\n * result: result array to push requested values onto.\n * leafhook: optional hook function called on leaves.\n */\nfunction deepValues(object, path, result, leafhook) {\n  if (!path) {\n    // Reached the leaf, at least according to the path specified. So we\n    // can add the \"object\" as the final value.\n    result.push(object);\n  } else {\n    // There is still some path left, bite off the first element from the\n    // remaining path, and work on that...\n    var field;\n    var path;\n    var dot = path.indexOf(\".\");\n    if (dot >= 0) {\n      field = path.slice(0, dot);\n      path = path.slice(dot + 1);\n    } else {\n      field = path;\n      path = null;\n    }\n    // If there is no path left, give an optional leafhook a chance\n    // to get into business; if a leafhook returns true, then we don't\n    // need to care anymore about this field and its value.\n    if (!path && leafhook) {\n      if (leafhook(object, field, result)) {\n        return;\n      }\n    }\n    var value = object[field];\n    if (value !== undefined && value !== null) {\n      if (!path && (typeof value === \"string\" || typeof value === \"number\")) {\n        // We've reached the leaf, and it is a scalar value (so no objects)...\n        result.push(value.toString());\n      } else if ($tw.utils.isArray(value)) {\n        // We've got an array, so we continue to resolve, but this time the\n        // path remaining on all array elements...\n        for (var idx = 0, len = value.length; idx < len; idx += 1) {\n          deepValues(value[idx], path, result);\n        }\n      } else if (path) {\n        // This is an object, so try to resolve further if there is a path\n        // still left...\n        deepValues(value, path, result);\n      } else {\n        $tw.utils.each(value, function(value) {\n          results.push(value.toString());\n        })\n      }\n    }\n  }\n  return result;\n};\n\nexports.deep = deepValues;\n\n})();\n","created":"20180815161626210","type":"application/javascript","modified":"20180815161710665","tags":"","module-type":"library"},"$:/plugins/TheDiveO/TwFusejs/license":{"title":"$:/plugins/TheDiveO/TwFusejs/license","created":"20180809162835520","modified":"20180816174341113","tags":"","type":"text/vnd.tiddlywiki","text":"* The included Fuse.js is licensed as [[Apache 2.0|https://github.com/krisk/Fuse/blob/master/LICENSE]].\n* My contributions (by ~TheDiveO) that aren't part of a standard ~TiddlyWiki 5 distribution itself (as available from the [[TiddlyWiki|http://tiddlywiki.com]] web site) are licensed as:\n** documentation is covered by [[CC BY 3.0|http://creativecommons.org/licenses/by/3.0/]].\n** code (such as ~TiddlyWiki 5 macros, ~JavaScript, et cetera) and CSS definitions are covered by the [[MIT License|http://opensource.org/licenses/mit-license.html]].\n"},"$:/plugins/TheDiveO/TwFusejs/options/default":{"title":"$:/plugins/TheDiveO/TwFusejs/options/default","created":"20180809170111776","modified":"20180818164951057","tags":"","type":"application/json","text":"{\n\t\"tokenize\": true,\n    \"shouldSort\": true,\n\t\"minMatchCharLength\": 3,\n    \"threshold\": 0.35,\n    \"distance\": 1000,\n\t\"keys\": [ \"fields.text,fields.title,fields.tags\" ],\n    \"getFn\": \"$:/plugins/TheDiveO/TwFusejs/getfns/multipath.js\"\n}"},"$:/plugins/TheDiveO/TwFusejs/options/weighted":{"title":"$:/plugins/TheDiveO/TwFusejs/options/weighted","created":"20180815183410797","modified":"20180818165150453","tags":"","type":"application/json","text":"{\n\t\"tokenize\": true,\n    \"shouldSort\": true,\n\t\"minMatchCharLength\": 3,\n    \"threshold\": 0.35,\n    \"distance\": 1000,\n\t\"keys\": [\n    \t{ \"name\": \"fields.title\", \"weight\": 0.1 },\n        { \"name\": \"fields.text\", \"weight\": 0.45 },\n        { \"name\": \"fields.tags\", \"weight\": 0.45 }\n    ]\n}"},"$:/plugins/TheDiveO/TwFusejs/readme":{"title":"$:/plugins/TheDiveO/TwFusejs/readme","created":"20180809162835521","modified":"20180816174232500","tags":"","type":"text/vnd.tiddlywiki","text":"This plugin brings lightweight fuzzy searching to ~TiddlyWiki, powered by [[Fuse.js|http://fusejs.io/]].\n\nYou can immediately use fuzzy searching in every ~TiddlyWiki where you install this plugin, right from the sidebar's search box. Just punch in some term(s) and you'll see an additional \"Fuzzy\" tab with fuzzy search results. Go to [[Default Search Result List|$:/plugins/TheDiveO/TwFusejs/ui/ControlPanel/fusedefaultsearchresultlist]] to make this new \"Fuzzy\" tab your default (fuzzy) search results tab.\n\nOn purpose, this ~TwFusejs plugin is not a one-size-fits-it-all fuzzy search plugin covering all bases. Instead, this is \"just\" a //lightweight// solution on purpose, and thus has some limitations in terms of speed and functionality. On the plus side, this plugin avoids having to calculate and maintain a dedicated search index.\n\nWe hope you will enjoy this plugin in your ~TiddlyWiki projects nevertheless.\n\n* Fuzzy search-related settings:\n** [[Fuzzy Term Searching|$:/plugins/TheDiveO/TwFusejs/ui/ControlPanel/everyorall]]\n** [[Default Search Result List|$:/plugins/TheDiveO/TwFusejs/ui/ControlPanel/fusedefaultsearchresultlist]]\n* [[TwFusejs GitHub Project|https://github.com/TheDiveO/TwFusejs]]"},"$:/plugins/TheDiveO/TwFusejs/styles/fusesearch.css":{"title":"$:/plugins/TheDiveO/TwFusejs/styles/fusesearch.css","created":"20180816115946548","modified":"20180816165107351","tags":"$:/tags/Stylesheet","type":"text/css","text":"div.fuse-results-count::after {\n  content: \"...\";\n}\n\ndiv.fuse-results-count + dl.fuse-results {\n  margin-top: 0;\n}\n\ndl.fuse-results dd {\n  font-size: 90%;\n  font-style: italic;\n  line-height: normal;\n}\n\ndl.fuse-results dd + dt {\n  margin-top: 1ex;\n}"},"$:/plugins/TheDiveO/TwFusejs/templates/fusesearch":{"title":"$:/plugins/TheDiveO/TwFusejs/templates/fusesearch","created":"20180811161220722","modified":"20180816171858922","tags":"","type":"text/vnd.tiddlywiki","text":"\\define fusesearch(anyterm)\n<!-- Set the variable \"fuse-search\" with the string to search for -->\n<!-- Optionally set the variable \"fuse-options\" to either a JSON data\n     string with options, or to the title of a JSON data tiddler\n     specifying the search options\n-->\n<$set name=\"fuse-options\" value=<<fuse-options>> emptyValue={{$:/plugins/TheDiveO/TwFusejs/options/default!!text}} >\n  <$set name=\"hits\" filter=\"[!is[current]!is[system]$anyterm$fuse:fuse-options<fuse-search>limit[20]]\">\n    <div class=\"fuse-results-count\">\n      <$count filter=\"[enlist<hits>]\"/> matches for\n      <$list filter=\"[[$anyterm$]prefix[!]]\">any</$list>\n      <$list filter=\"[[$anyterm$]!prefix[!]]\">all</$list>\n      search terms\n    </div>\n    <dl class=\"fuse-results\">\n      <$list variable=\"hit\" filter=\"[enlist<hits>]\">\n        <dt>\n          <!-- render matching titles as tiddler links -->\n          <$link to=<<hit>> ><$view tiddler=<<hit>> field=\"title\"/></$link>\n        </dt>\n        <dd>\n          <!-- render the (beginning) of a matching tiddler as pure text without any markup -->\n          <$list filter=\"[<hit>rendertext[]stringlimit[300]]\">\n            <$view field=\"title\" format=\"plainwikified\"/>\n          </$list>\n        </dd>\n      </$list>\n    </dl>\n  </$set>\n</$set>\n\\end\n<$macrocall $name=\"fusesearch\" anyterm={{$:/config/TwFusejs/allterms!!text}} />\n"},"$:/plugins/TheDiveO/TwFusejs/ui/ControlPanel/everyorall":{"title":"$:/plugins/TheDiveO/TwFusejs/ui/ControlPanel/everyorall","caption":"Fuzzy Term Searching","created":"20180816111158550","modified":"20180816124903959","tags":"$:/tags/ControlPanel/Settings","type":"text/vnd.tiddlywiki","text":"<$set name=\"cfgtiddler\" value=\"$:/config/TwFusejs/allterms\">\n\n<$link to=<<cfgtiddler>> >You can either search for //any// or //all// of your search terms:</$link>\n\n<$select tiddler=<<cfgtiddler>> default=\"\">\n<option value=\"\">All</option>\n<option value=\"!\">Any</option>\n</$select>\n</$set>"},"$:/plugins/TheDiveO/TwFusejs/ui/ControlPanel/fusedefaultsearchresultlist":{"title":"$:/plugins/TheDiveO/TwFusejs/ui/ControlPanel/fusedefaultsearchresultlist","caption":"Default Search Result List","created":"20180816123006775","modified":"20180816125741864","tags":"$:/tags/ControlPanel/Settings","type":"text/vnd.tiddlywiki","text":"Choose the default search result list to be opened automatically:\n\n<$select tiddler=\"$:/config/SearchResults/Default\">\n  <$list filter=\"[all[tiddlers+shadows]tag[$:/tags/SearchResults]]\">\n    <option value=<<currentTiddler>> >{{!!caption}}</option>\n  </$list>\n</$select>"},"$:/plugins/TheDiveO/TwFusejs/ui/fusesearchresults":{"title":"$:/plugins/TheDiveO/TwFusejs/ui/fusesearchresults","caption":"Fuzzy","created":"20180816121802012","modified":"20180817090000126","tags":"$:/tags/SearchResults","type":"text/vnd.tiddlywiki","text":"\\define fusesearchresults(anyterm)\n<$set name=\"fuse-options\" value=<<fuse-options>> emptyValue={{$:/plugins/TheDiveO/TwFusejs/options/default!!text}} >\n  <$set name=\"hits\" filter=\"[!is[current]!is[system]$anyterm$fuse:fuse-options{$(searchTiddler)$}limit[20]]\">\n    <small>//<$count filter=\"[enlist<hits>]\"/> matches://</small>\n    <$list variable=\"hit\" filter=\"[enlist<hits>]\">\n      <div class=\"tc-menu-list-item\">\n        <$link to=<<hit>> ><$view tiddler=<<hit>> field=\"title\"/></$link>\n      </div>\n    </$list>\n  </$set>\n</$set>\n\\end\n<$macrocall $name=\"fusesearchresults\" anyterm={{$:/config/TwFusejs/allterms!!text}} />"}}}